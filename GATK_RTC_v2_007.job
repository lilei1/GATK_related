#!/bin/sh

#PBS -l mem=15gb,nodes=1:ppn=4,walltime=48:00:00 
#PBS -m abe 
#PBS -M llei@umn.edu
#PBS -q mesabi

#	Required for Java
#module load gatk/2.7.2 

#	The program we are calling for realignment
#PROGRAM=${HOME}/Soft/GenomeAnalysisTK-2.7-2-g6bda569/GenomeAnalysisTK.jar
#	The base directory for our projects
BASE=/home/morrellp/liux1299/Projects/IPK_ExomeCapture_Disk_1-3/
#	And the shared space for common data
#SHARED=/home/morrellp/shared
OUTPUT=${HOME}/Deleterious_mutation_project/mapping_sample/wild_accs_bam/SAM_Processing/WBDC007/
#	The Species we are working on

#	And the capture we are working on 

#	The sample
SAMPLE="WBDC_007"
#	The date of the alignment
YMD="2015-12-16_2015-12-21"
#	The reference sequence
REF=${HOME}/Shared/shared/References/Reference_Sequences/Barley/Morex/Morex_Reference.fasta
#	The alignment file
ALIGNMENT=${HOME}/Deleterious_mutation_project/mapping_sample/wild_accs_bam/SAM_Processing/deduped/${SAMPLE}_${YMD}_deduped.bam
#	The known Indels file
INDELS=${BASE}/All_INDELs_Sorted.vcf
#	The capture design file
CAPTURE_DESIGN=${BASE}/capture.bed
module load gatk/2.7.2 
#	cd into the directory
#cd ${OUTPUT}
#	JAVA OPTIONS
#	-Xmx[amount]	:	use [amount] of memory.
#	-jar <file>		:	execute <file>, which is a jar file

#	GATK OPTIONS
#	-T RealignerTargetCreator
#		Create a list of regions to realign
#		Documentation: http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_indels_RealignerTargetCreator.html
#	-nct <int>
#		Use <int> CPU cores
#		NOTE: This option can make performance WORSE if the system is 
#		IO-limited, and not compute-limited.
#	-R <FASTA file>
#		Where the reference sequence is stored
#	-I <BAM file>
#		The BAM file for which to create intervals
#	-known <file>
#		<file> contains known INDELs. VCF or BED format
#	-o <file>
#		Write the intervals to this file
#		NOTE: This file must have extension of .list, .intervals, or .interval_list

#_JAVA_OPTIONS="-Xmx15g -XX:MaxPermSize=10g -Djava.io.tmpdir=/scratch2/tkono" java -jar $PROGRAM \

gatk\
	-T RealignerTargetCreator\
	-nt 1\
	-R ${REF}\
	-I ${ALIGNMENT}\
	-known ${INDELS}\
	-L ${CAPTURE_DESIGN}\
	--out ${OUTPUT}/RTC_Targets.intervals

#	OPTIONS
#	-T IndelRealigner
#		Actually performs realignment around the interval found above
#		Documentation: http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_indels_IndelRealigner.html
#	--knownAllels <file>
#		File containing known Indels, VCF or BED format
#	--entropyThreshold <double>
#		Percentage of mismatch to have "high entropy"
#		Need to play with this value to determine optimum!!!
#		Default: 0.15
#		Higher thresholds mean more realignment 
#	--LODThresholdForCleaning <double>
#		The LOD threshold aboce which the realigner will work. Simlar to 'significance'
#		 - is the improvement 'significant'?
#		lower values for low coverage or low MAF.
#		default 5.0
#	--targetIntervals <file>
#		File generated by RealignerTargetCreator
#	-I <BAM file>
#		Input BAM file. Must be the same as used for RealignerTargetCreator
#	-R <FASTA file>
#		Reference FASTA. Must be the same as used above
#	-o <BAM file>
#		Output the realigned BAM
#	--maxReadsInMemory <int>
#		Maximum coverage to realign around. Deafult: 20,000
#	Now we run the program with all our options
#	We bump up the max reads argument, since some of our contigs have really deep coverage...
#		Could be an error? Investigate.
#_JAVA_OPTIONS="-Xmx15g -XX:MaxPermSize=10g" java -jar $PROGRAM\
gatk\
	-T IndelRealigner\
	--knownAlleles ${INDELS}\
	--entropyThreshold 0.20\
	--LODThresholdForCleaning 2.0\
	--maxReadsInMemory 50000\
	--targetIntervals ${OUTPUT}/RTC_Targets.intervals\
	-I ${ALIGNMENT}\
	-R ${REF}\
	-o -o ${OUTPUT}/${SAMPLE}_${YMD}_deduped_realigned.bam

